name: Auto Renew Skybots

on:
  schedule:
    - cron: '0 0 * * *'  # 每天运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  renew:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install selenium
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb

      - name: Install ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: Run renewal
        id: renew
        env:
          COOKIES: ${{ secrets.SKYBOTS_COOKIES }}
        run: |
          python - << 'EOF' | tee output.log
          import os, time
          from selenium import webdriver
          from selenium.webdriver.common.by import By
          from selenium.webdriver.chrome.options import Options
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC

          options = Options()
          options.add_argument('--headless=new')
          options.add_argument('--no-sandbox')
          options.add_argument('--disable-dev-shm-usage')
          options.add_argument('--window-size=1920,1080')
          
          driver = webdriver.Chrome(options=options)
          wait = WebDriverWait(driver, 15)
          
          try:
              driver.get('https://skybots.tech')
              time.sleep(2)
              
              # 使用 CDP 设置 cookies
              driver.execute_cdp_cmd('Network.enable', {})
              for cookie in os.environ['COOKIES'].split('; '):
                  if '=' not in cookie:
                      continue
                  name, value = cookie.split('=', 1)
                  name = name.strip()
                  value = value.strip()
                  
                  # 构建 cookie 参数
                  cookie_param = {
                      'name': name,
                      'value': value,
                      'path': '/'
                  }
                  
                  # __Host- 前缀的 cookie 不能设置 domain
                  if '__Host-' in name:
                      cookie_param['secure'] = True
                      cookie_param['sameSite'] = 'None'
                      cookie_param['url'] = 'https://skybots.tech'
                  else:
                      cookie_param['domain'] = '.skybots.tech'
                      if '__Secure-' in name:
                          cookie_param['secure'] = True
                          cookie_param['sameSite'] = 'None'
                  
                  try:
                      driver.execute_cdp_cmd('Network.setCookie', cookie_param)
                  except Exception as e:
                      print(f'⚠️ 跳过 {name}: {str(e)[:50]}')
              
              driver.get('https://skybots.tech/dashboard/my-projects')
              
              # 等待页面加载完成
              print('等待页面加载...')
              time.sleep(8)  # 增加等待时间
              
              # 检查登录状态
              if 'discord' in driver.current_url.lower():
                  print('❌ Cookie 已过期')
                  exit(1)
              
              driver.save_screenshot('page.png')
              
              # 打印页面源码用于调试
              page_source = driver.page_source
              print(f'页面长度: {len(page_source)}')
              print(f'是否包含 Renouveler: {"Renouveler" in page_source}')
              
              # 尝试多种方式查找续期按钮
              renew_button = None
              
              # 方法1: 通过 span 文本查找
              try:
                  renew_button = driver.find_element(By.XPATH, "//button[.//span[text()='Renouveler']]")
                  print('✓ 通过方法1找到按钮')
              except:
                  pass
              
              # 方法2: 包含文本的更宽松匹配
              if not renew_button:
                  try:
                      renew_button = driver.find_element(By.XPATH, "//button[contains(., 'Renouveler') and contains(@class, 'yellow')]")
                      print('✓ 通过方法2找到按钮')
                  except:
                      pass
              
              # 方法3: 通过类名和SVG查找
              if not renew_button:
                  try:
                      buttons = driver.find_elements(By.XPATH, "//button[contains(@class, 'yellow-500')]")
                      for btn in buttons:
                          if 'Renouveler' in btn.text or 'renouveler' in btn.text.lower():
                              renew_button = btn
                              print('✓ 通过方法3找到按钮')
                              break
                  except:
                      pass
              
              # 方法4: 查找所有包含 Renouveler 的按钮
              if not renew_button:
                  try:
                      all_buttons = driver.find_elements(By.TAG_NAME, "button")
                      print(f'页面共有 {len(all_buttons)} 个按钮')
                      for i, btn in enumerate(all_buttons):
                          btn_text = btn.text.strip()
                          if btn_text:
                              print(f'按钮 {i+1}: {btn_text[:50]}')
                          if 'Renouveler' in btn_text or 'renouveler' in btn_text.lower():
                              renew_button = btn
                              print(f'✓ 通过方法4找到按钮 (索引 {i+1})')
                              break
                  except Exception as e:
                      print(f'方法4错误: {str(e)}')
              
              if renew_button:
                  # 检查按钮是否被禁用
                  is_disabled = renew_button.get_attribute('disabled')
                  class_names = renew_button.get_attribute('class')
                  print(f'按钮状态 - disabled: {is_disabled}, classes: {class_names}')
                  
                  if is_disabled:
                      print('⚠️ 续期按钮当前被禁用（可能还未到续期时间）')
                  else:
                      print('找到可用的续期按钮，准备点击...')
                      driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", renew_button)
                      time.sleep(1)
                      driver.execute_script("arguments[0].click();", renew_button)
                      time.sleep(3)
                      
                      # 处理成功提示
                      try:
                          alert = driver.switch_to.alert
                          print(f'✅ {alert.text}')
                          alert.accept()
                      except:
                          print('无弹窗提示')
                      
                      # 输出新 cookies
                      cookies = '; '.join([f"{c['name']}={c['value']}" for c in driver.get_cookies()])
                      print(f'NEW_COOKIES={cookies}')
              else:
                  print('✅ 未找到续期按钮（可能无需续期或按钮未显示）')
              
          except Exception as e:
              print(f'❌ 发生错误: {str(e)}')
              import traceback
              traceback.print_exc()
              driver.save_screenshot('error.png')
              exit(1)
          finally:
              driver.quit()
          EOF

      - name: Update cookies
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          REPO: ${{ github.repository }}
        run: |
          # 提取新的 cookies
          new_cookies=$(grep "NEW_COOKIES=" output.log | cut -d'=' -f2-)
          
          if [ -n "$new_cookies" ]; then
            echo "正在更新 Secrets..."
            gh secret set SKYBOTS_COOKIES --repo "$REPO" --body "$new_cookies"
            echo "✅ Cookies 已更新"
          else
            echo "ℹ️ 无需更新 Cookies"
          fi

      - name: Upload screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: "*.png"
          if-no-files-found: ignore
